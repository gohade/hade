{
  "version": 3,
  "sources": ["../../../../node_modules/mermaid/src/diagrams/sequence/parser/sequenceDiagram.jison", "../../../../node_modules/mermaid/src/diagrams/sequence/sequenceDb.js", "../../../../node_modules/mermaid/src/diagrams/sequence/styles.js", "../../../../node_modules/mermaid/src/diagrams/sequence/svgDraw.js", "../../../../node_modules/mermaid/src/diagrams/sequence/sequenceRenderer.ts", "../../../../node_modules/mermaid/src/diagrams/sequence/sequenceDiagram.ts"],
  "sourcesContent": ["/** mermaid\n *  https://mermaidjs.github.io/\n *  (c) 2014-2015 Knut Sveidqvist\n *  MIT license.\n *\n *  Based on js sequence diagrams jison grammr\n *  https://bramp.github.io/js-sequence-diagrams/\n *  (c) 2012-2013 Andrew Brampton (bramp.net)\n *  Simplified BSD license.\n */\n%lex\n\n%options case-insensitive\n\n// Special states for recognizing aliases\n// A special state for grabbing text up to the first comment/newline\n%x ID ALIAS LINE\n\n// Directive states\n%x open_directive type_directive arg_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n[\\n]+                                                           return 'NEWLINE';\n\\s+                                                             /* skip all whitespace */\n<ID,ALIAS,LINE>((?!\\n)\\s)+                                      /* skip same-line whitespace */\n<INITIAL,ID,ALIAS,LINE,arg_directive,type_directive,open_directive>\\#[^\\n]*   /* skip comments */\n\\%%(?!\\{)[^\\n]*                                                 /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */\n[0-9]+(?=[ \\n]+)       \t\t\t\t\t\t\t\t\t\t\treturn 'NUM';\n\"box\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ this.begin('LINE'); return 'box'; }\n\"participant\"                                                   { this.begin('ID'); return 'participant'; }\n\"actor\"                                                   \t\t{ this.begin('ID'); return 'participant_actor'; }\n<ID>[^\\->:\\n,;]+?([\\-]*[^\\->:\\n,;]+?)*?(?=((?!\\n)\\s)+\"as\"(?!\\n)\\s|[#\\n;]|$)     { yytext = yytext.trim(); this.begin('ALIAS'); return 'ACTOR'; }\n<ALIAS>\"as\"                                                     { this.popState(); this.popState(); this.begin('LINE'); return 'AS'; }\n<ALIAS>(?:)                                                     { this.popState(); this.popState(); return 'NEWLINE'; }\n\"loop\"                                                          { this.begin('LINE'); return 'loop'; }\n\"rect\"                                                          { this.begin('LINE'); return 'rect'; }\n\"opt\"                                                           { this.begin('LINE'); return 'opt'; }\n\"alt\"                                                           { this.begin('LINE'); return 'alt'; }\n\"else\"                                                          { this.begin('LINE'); return 'else'; }\n\"par\"                                                           { this.begin('LINE'); return 'par'; }\n\"and\"                                                           { this.begin('LINE'); return 'and'; }\n\"critical\"                                                      { this.begin('LINE'); return 'critical'; }\n\"option\"                                                        { this.begin('LINE'); return 'option'; }\n\"break\"                                                         { this.begin('LINE'); return 'break'; }\n<LINE>(?:[:]?(?:no)?wrap:)?[^#\\n;]*                             { this.popState(); return 'restOfLine'; }\n\"end\"                                                           return 'end';\n\"left of\"                                                       return 'left_of';\n\"right of\"                                                      return 'right_of';\n\"links\"                                                         return 'links';\n\"link\"                                                          return 'link';\n\"properties\"                                                    return 'properties';\n\"details\"                                                       return 'details';\n\"over\"                                                          return 'over';\n\"note\"                                                          return 'note';\n\"activate\"                                                      { this.begin('ID'); return 'activate'; }\n\"deactivate\"                                                    { this.begin('ID'); return 'deactivate'; }\n\"title\"\\s[^#\\n;]+                                               return 'title';\n\"title:\"\\s[^#\\n;]+                                              return 'legacy_title';\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n\"sequenceDiagram\"                                               return 'SD';\n\"autonumber\"                                                    return 'autonumber';\n\"off\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn 'off';\n\",\"                                                             return ',';\n\";\"                                                             return 'NEWLINE';\n[^\\+\\->:\\n,;]+((?!(\\-x|\\-\\-x|\\-\\)|\\-\\-\\)))[\\-]*[^\\+\\->:\\n,;]+)*             { yytext = yytext.trim(); return 'ACTOR'; }\n\"->>\"                                                           return 'SOLID_ARROW';\n\"-->>\"                                                          return 'DOTTED_ARROW';\n\"->\"                                                            return 'SOLID_OPEN_ARROW';\n\"-->\"                                                           return 'DOTTED_OPEN_ARROW';\n\\-[x]                                                           return 'SOLID_CROSS';\n\\-\\-[x]                                                         return 'DOTTED_CROSS';\n\\-[\\)]                                                          return 'SOLID_POINT';\n\\-\\-[\\)]                                                        return 'DOTTED_POINT';\n\":\"(?:(?:no)?wrap:)?[^#\\n;]+                                    return 'TXT';\n\"+\"                                                             return '+';\n\"-\"                                                             return '-';\n<<EOF>>                                                         return 'NEWLINE';\n.                                                               return 'INVALID';\n\n/lex\n\n%left '^'\n\n%start start\n\n%% /* language grammar */\n\nstart\n\t: SPACE start\n\t| NEWLINE start\n\t| directive start\n\t| SD document { yy.apply($2);return $2; }\n\t;\n\ndocument\n\t: /* empty */ { $$ = [] }\n\t| document line {$1.push($2);$$ = $1}\n\t;\n\nline\n\t: SPACE statement { $$ = $2 }\n\t| statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\nbox_section\n\t: /* empty */ { $$ = [] }\n\t| box_section box_line {$1.push($2);$$ = $1}\n\t;\n\nbox_line\n\t: SPACE participant_statement { $$ = $2 }\n\t| participant_statement { $$ = $1 }\n\t| NEWLINE { $$=[]; }\n\t;\n\n\ndirective\n  : openDirective typeDirective closeDirective 'NEWLINE'\n  | openDirective typeDirective ':' argDirective closeDirective 'NEWLINE'\n  ;\n\nstatement\n\t: participant_statement\n\t| 'box' restOfLine box_section end\n\t{\n\t\t$3.unshift({type: 'boxStart', boxData:yy.parseBoxData($2) });\n\t\t$3.push({type: 'boxEnd', boxText:$2});\n\t\t$$=$3;}\n\t| signal 'NEWLINE'\n\t| autonumber NUM NUM 'NEWLINE' { $$= {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:Number($3), sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber NUM 'NEWLINE' { $$ = {type:'sequenceIndex',sequenceIndex: Number($2), sequenceIndexStep:1, sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber off 'NEWLINE' { $$ = {type:'sequenceIndex', sequenceVisible:false, signalType:yy.LINETYPE.AUTONUMBER};}\n\t| autonumber 'NEWLINE'  {$$ = {type:'sequenceIndex', sequenceVisible:true, signalType:yy.LINETYPE.AUTONUMBER}; }\n\t| 'activate' actor 'NEWLINE' {$$={type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $2};}\n\t| 'deactivate' actor 'NEWLINE' {$$={type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $2};}\n\t| note_statement 'NEWLINE'\n\t| links_statement 'NEWLINE'\n\t| link_statement 'NEWLINE'\n\t| properties_statement 'NEWLINE'\n\t| details_statement 'NEWLINE'\n\t| title {yy.setDiagramTitle($1.substring(6));$$=$1.substring(6);}\n\t| legacy_title {yy.setDiagramTitle($1.substring(7));$$=$1.substring(7);}\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }\n\t| 'loop' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'loopStart', loopText:yy.parseMessage($2), signalType: yy.LINETYPE.LOOP_START});\n\t\t$3.push({type: 'loopEnd', loopText:$2, signalType: yy.LINETYPE.LOOP_END});\n\t\t$$=$3;}\n\t| 'rect' restOfLine document end\n\t{\n\t\t$3.unshift({type: 'rectStart', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_START });\n\t\t$3.push({type: 'rectEnd', color:yy.parseMessage($2), signalType: yy.LINETYPE.RECT_END });\n\t\t$$=$3;}\n\t| opt restOfLine document end\n\t{\n\t\t$3.unshift({type: 'optStart', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_START});\n\t\t$3.push({type: 'optEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.OPT_END});\n\t\t$$=$3;}\n\t| alt restOfLine else_sections end\n\t{\n\t\t// Alt start\n\t\t$3.unshift({type: 'altStart', altText:yy.parseMessage($2), signalType: yy.LINETYPE.ALT_START});\n\t\t// Content in alt is already in $3\n\t\t// End\n\t\t$3.push({type: 'altEnd', signalType: yy.LINETYPE.ALT_END});\n\t\t$$=$3;}\n\t| par restOfLine par_sections end\n\t{\n\t\t// Parallel start\n\t\t$3.unshift({type: 'parStart', parText:yy.parseMessage($2), signalType: yy.LINETYPE.PAR_START});\n\t\t// Content in par is already in $3\n\t\t// End\n\t\t$3.push({type: 'parEnd', signalType: yy.LINETYPE.PAR_END});\n\t\t$$=$3;}\n\t| critical restOfLine option_sections end\n\t{\n\t\t// critical start\n\t\t$3.unshift({type: 'criticalStart', criticalText:yy.parseMessage($2), signalType: yy.LINETYPE.CRITICAL_START});\n\t\t// Content in critical is already in $3\n\t\t// critical end\n\t\t$3.push({type: 'criticalEnd', signalType: yy.LINETYPE.CRITICAL_END});\n\t\t$$=$3;}\n\t| break restOfLine document end\n\t{\n\t\t$3.unshift({type: 'breakStart', breakText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_START});\n\t\t$3.push({type: 'breakEnd', optText:yy.parseMessage($2), signalType: yy.LINETYPE.BREAK_END});\n\t\t$$=$3;}\n  | directive\n\t;\n\noption_sections\n\t: document\n\t| document option restOfLine option_sections\n\t{ $$ = $1.concat([{type: 'option', optionText:yy.parseMessage($3), signalType: yy.LINETYPE.CRITICAL_OPTION}, $4]); }\n\t;\n\npar_sections\n\t: document\n\t| document and restOfLine par_sections\n\t{ $$ = $1.concat([{type: 'and', parText:yy.parseMessage($3), signalType: yy.LINETYPE.PAR_AND}, $4]); }\n\t;\n\nelse_sections\n\t: document\n\t| document else restOfLine else_sections\n\t{ $$ = $1.concat([{type: 'else', altText:yy.parseMessage($3), signalType: yy.LINETYPE.ALT_ELSE}, $4]); }\n\t;\n\nparticipant_statement\n\t: 'participant' actor 'AS' restOfLine 'NEWLINE' {$2.type='addParticipant';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant' actor 'NEWLINE' {$2.type='addParticipant';$$=$2;}\n\t| 'participant_actor' actor 'AS' restOfLine 'NEWLINE' {$2.type='addActor';$2.description=yy.parseMessage($4); $$=$2;}\n\t| 'participant_actor' actor 'NEWLINE' {$2.type='addActor'; $$=$2;}\n\t;\n\nnote_statement\n\t: 'note' placement actor text2\n\t{\n\t\t$$ = [$3, {type:'addNote', placement:$2, actor:$3.actor, text:$4}];}\n\t| 'note' 'over' actor_pair text2\n\t{\n\t\t// Coerce actor_pair into a [to, from, ...] array\n\t\t$2 = [].concat($3, $3).slice(0, 2);\n\t\t$2[0] = $2[0].actor;\n\t\t$2[1] = $2[1].actor;\n\t\t$$ = [$3, {type:'addNote', placement:yy.PLACEMENT.OVER, actor:$2.slice(0, 2), text:$4}];}\n\t;\n\nlinks_statement\n\t: 'links' actor text2\n\t{\n\t\t$$ = [$2, {type:'addLinks', actor:$2.actor, text:$3}];\n  }\n\t;\n\nlink_statement\n\t: 'link' actor text2\n\t{\n\t\t$$ = [$2, {type:'addALink', actor:$2.actor, text:$3}];\n  }\n\t;\n\nproperties_statement\n\t: 'properties' actor text2\n\t{\n\t\t$$ = [$2, {type:'addProperties', actor:$2.actor, text:$3}];\n  }\n\t;\n\ndetails_statement\n\t: 'details' actor text2\n\t{\n\t\t$$ = [$2, {type:'addDetails', actor:$2.actor, text:$3}];\n  }\n\t;\n\nspaceList\n    : SPACE spaceList\n    | SPACE\n    ;\nactor_pair\n\t: actor ',' actor   { $$ = [$1, $3]; }\n\t| actor             { $$ = $1; }\n\t;\n\nplacement\n\t: 'left_of'   { $$ = yy.PLACEMENT.LEFTOF; }\n\t| 'right_of'  { $$ = yy.PLACEMENT.RIGHTOF; }\n\t;\n\nsignal\n\t: actor signaltype '+' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t              {type: 'activeStart', signalType: yy.LINETYPE.ACTIVE_START, actor: $4}\n\t             ]}\n\t| actor signaltype '-' actor text2\n\t{ $$ = [$1,$4,{type: 'addMessage', from:$1.actor, to:$4.actor, signalType:$2, msg:$5},\n\t             {type: 'activeEnd', signalType: yy.LINETYPE.ACTIVE_END, actor: $1}\n\t             ]}\n\t| actor signaltype actor text2\n\t{ $$ = [$1,$3,{type: 'addMessage', from:$1.actor, to:$3.actor, signalType:$2, msg:$4}]}\n\t;\n\n// actor\n// \t: actor_participant\n// \t| actor_actor\n// \t;\n\nactor: ACTOR {$$={ type: 'addParticipant', actor:$1}};\n// actor_actor: ACTOR {$$={type: 'addActor', actor:$1}};\n\nsignaltype\n\t: SOLID_OPEN_ARROW  { $$ = yy.LINETYPE.SOLID_OPEN; }\n\t| DOTTED_OPEN_ARROW { $$ = yy.LINETYPE.DOTTED_OPEN; }\n\t| SOLID_ARROW       { $$ = yy.LINETYPE.SOLID; }\n\t| DOTTED_ARROW      { $$ = yy.LINETYPE.DOTTED; }\n\t| SOLID_CROSS       { $$ = yy.LINETYPE.SOLID_CROSS; }\n\t| DOTTED_CROSS      { $$ = yy.LINETYPE.DOTTED_CROSS; }\n\t| SOLID_POINT { $$ = yy.LINETYPE.SOLID_POINT; }\n\t| DOTTED_POINT { $$ = yy.LINETYPE.DOTTED_POINT; }\n\t;\n\ntext2\n  : TXT {$$ = yy.parseMessage($1.trim().substring(1)) }\n  ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'sequence'); }\n  ;\n\n%%\n", "import mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport { log } from '../../logger';\nimport { sanitizeText } from '../common/common';\nimport {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet prevActor = undefined;\nlet actors = {};\nlet boxes = [];\nlet messages = [];\nconst notes = [];\nlet sequenceNumbersEnabled = false;\nlet wrapEnabled;\nlet currentBox = undefined;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nexport const addBox = function (data) {\n  boxes.push({\n    name: data.text,\n    wrap: (data.wrap === undefined && autoWrap()) || !!data.wrap,\n    fill: data.color,\n    actorKeys: [],\n  });\n  currentBox = boxes.slice(-1)[0];\n};\n\nexport const addActor = function (id, name, description, type) {\n  let assignedBox = currentBox;\n  const old = actors[id];\n  if (old) {\n    // If already set and trying to set to a new one throw error\n    if (currentBox && old.box && currentBox !== old.box) {\n      throw new Error(\n        'A same participant should only be defined in one Box: ' +\n          old.name +\n          \" can't be in '\" +\n          old.box.name +\n          \"' and in '\" +\n          currentBox.name +\n          \"' at the same time.\"\n      );\n    }\n\n    // Don't change the box if already\n    assignedBox = old.box ? old.box : currentBox;\n    old.box = assignedBox;\n\n    // Don't allow description nulling\n    if (old && name === old.name && description == null) {\n      return;\n    }\n  }\n\n  // Don't allow null descriptions, either\n  if (description == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  if (type == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n\n  actors[id] = {\n    box: assignedBox,\n    name: name,\n    description: description.text,\n    wrap: (description.wrap === undefined && autoWrap()) || !!description.wrap,\n    prevActor: prevActor,\n    links: {},\n    properties: {},\n    actorCnt: null,\n    rectData: null,\n    type: type || 'participant',\n  };\n  if (prevActor && actors[prevActor]) {\n    actors[prevActor].nextActor = id;\n  }\n\n  if (currentBox) {\n    currentBox.actorKeys.push(id);\n  }\n  prevActor = id;\n};\n\nconst activationCount = (part) => {\n  let i;\n  let count = 0;\n  for (i = 0; i < messages.length; i++) {\n    if (messages[i].type === LINETYPE.ACTIVE_START && messages[i].from.actor === part) {\n      count++;\n    }\n    if (messages[i].type === LINETYPE.ACTIVE_END && messages[i].from.actor === part) {\n      count--;\n    }\n  }\n  return count;\n};\n\nexport const addMessage = function (idFrom, idTo, message, answer) {\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    answer: answer,\n  });\n};\n\nexport const addSignal = function (\n  idFrom,\n  idTo,\n  message = { text: undefined, wrap: undefined },\n  messageType\n) {\n  if (messageType === LINETYPE.ACTIVE_END) {\n    const cnt = activationCount(idFrom.actor);\n    if (cnt < 1) {\n      // Bail out as there is an activation signal from an inactive participant\n      let error = new Error('Trying to inactivate an inactive participant (' + idFrom.actor + ')');\n      error.hash = {\n        text: '->>-',\n        token: '->>-',\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: [\"'ACTIVE_PARTICIPANT'\"],\n      };\n      throw error;\n    }\n  }\n  messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: messageType,\n  });\n  return true;\n};\n\nexport const hasAtLeastOneBox = function () {\n  return boxes.length > 0;\n};\n\nexport const hasAtLeastOneBoxWithTitle = function () {\n  return boxes.some((b) => b.name);\n};\n\nexport const getMessages = function () {\n  return messages;\n};\n\nexport const getBoxes = function () {\n  return boxes;\n};\nexport const getActors = function () {\n  return actors;\n};\nexport const getActor = function (id) {\n  return actors[id];\n};\nexport const getActorKeys = function () {\n  return Object.keys(actors);\n};\nexport const enableSequenceNumbers = function () {\n  sequenceNumbersEnabled = true;\n};\nexport const disableSequenceNumbers = function () {\n  sequenceNumbersEnabled = false;\n};\nexport const showSequenceNumbers = () => sequenceNumbersEnabled;\n\nexport const setWrap = function (wrapSetting) {\n  wrapEnabled = wrapSetting;\n};\n\nexport const autoWrap = () => {\n  // if setWrap has been called, use that value, otherwise use the value from the config\n  // TODO: refactor, always use the config value let setWrap update the config value\n  if (wrapEnabled !== undefined) {\n    return wrapEnabled;\n  }\n  return configApi.getConfig().sequence.wrap;\n};\n\nexport const clear = function () {\n  actors = {};\n  boxes = [];\n  messages = [];\n  sequenceNumbersEnabled = false;\n  commonClear();\n};\n\nexport const parseMessage = function (str) {\n  const _str = str.trim();\n  const message = {\n    text: _str.replace(/^:?(?:no)?wrap:/, '').trim(),\n    wrap:\n      _str.match(/^:?wrap:/) !== null\n        ? true\n        : _str.match(/^:?nowrap:/) !== null\n        ? false\n        : undefined,\n  };\n  log.debug('parseMessage:', message);\n  return message;\n};\n\n// We expect the box statement to be color first then description\n// The color can be rgb,rgba,hsl,hsla, or css code names  #hex codes are not supported for now because of the way the char # is handled\n// We extract first segment as color, the rest of the line is considered as text\nexport const parseBoxData = function (str) {\n  const match = str.match(/^((?:rgba?|hsla?)\\s*\\(.*\\)|\\w*)(.*)$/);\n  let color = match != null && match[1] ? match[1].trim() : 'transparent';\n  let title = match != null && match[2] ? match[2].trim() : undefined;\n\n  // check that the string is a color\n  if (window && window.CSS) {\n    if (!window.CSS.supports('color', color)) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  } else {\n    const style = new Option().style;\n    style.color = color;\n    if (style.color !== color) {\n      color = 'transparent';\n      title = str.trim();\n    }\n  }\n\n  const boxData = {\n    color: color,\n    text:\n      title !== undefined\n        ? sanitizeText(title.replace(/^:?(?:no)?wrap:/, ''), configApi.getConfig())\n        : undefined,\n    wrap:\n      title !== undefined\n        ? title.match(/^:?wrap:/) !== null\n          ? true\n          : title.match(/^:?nowrap:/) !== null\n          ? false\n          : undefined\n        : undefined,\n  };\n  return boxData;\n};\n\nexport const LINETYPE = {\n  SOLID: 0,\n  DOTTED: 1,\n  NOTE: 2,\n  SOLID_CROSS: 3,\n  DOTTED_CROSS: 4,\n  SOLID_OPEN: 5,\n  DOTTED_OPEN: 6,\n  LOOP_START: 10,\n  LOOP_END: 11,\n  ALT_START: 12,\n  ALT_ELSE: 13,\n  ALT_END: 14,\n  OPT_START: 15,\n  OPT_END: 16,\n  ACTIVE_START: 17,\n  ACTIVE_END: 18,\n  PAR_START: 19,\n  PAR_AND: 20,\n  PAR_END: 21,\n  RECT_START: 22,\n  RECT_END: 23,\n  SOLID_POINT: 24,\n  DOTTED_POINT: 25,\n  AUTONUMBER: 26,\n  CRITICAL_START: 27,\n  CRITICAL_OPTION: 28,\n  CRITICAL_END: 29,\n  BREAK_START: 30,\n  BREAK_END: 31,\n};\n\nexport const ARROWTYPE = {\n  FILLED: 0,\n  OPEN: 1,\n};\n\nexport const PLACEMENT = {\n  LEFTOF: 0,\n  RIGHTOF: 1,\n  OVER: 2,\n};\n\nexport const addNote = function (actor, placement, message) {\n  const note = {\n    actor: actor,\n    placement: placement,\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n  };\n\n  // Coerce actor into a [to, from, ...] array\n  // eslint-disable-next-line unicorn/prefer-spread\n  const actors = [].concat(actor, actor);\n\n  notes.push(note);\n  messages.push({\n    from: actors[0],\n    to: actors[1],\n    message: message.text,\n    wrap: (message.wrap === undefined && autoWrap()) || !!message.wrap,\n    type: LINETYPE.NOTE,\n    placement: placement,\n  });\n};\n\nexport const addLinks = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    const links = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\nexport const addALink = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  try {\n    const links = {};\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    var sep = sanitizedText.indexOf('@');\n    sanitizedText = sanitizedText.replace(/&amp;/g, '&');\n    sanitizedText = sanitizedText.replace(/&equals;/g, '=');\n    var label = sanitizedText.slice(0, sep - 1).trim();\n    var link = sanitizedText.slice(sep + 1).trim();\n\n    links[label] = link;\n    // add the deserialized text to the actor's links field.\n    insertLinks(actor, links);\n  } catch (e) {\n    log.error('error while parsing actor link text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} links\n */\nfunction insertLinks(actor, links) {\n  if (actor.links == null) {\n    actor.links = links;\n  } else {\n    for (let key in links) {\n      actor.links[key] = links[key];\n    }\n  }\n}\n\nexport const addProperties = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  // JSON.parse the text\n  try {\n    let sanitizedText = sanitizeText(text.text, configApi.getConfig());\n    const properties = JSON.parse(sanitizedText);\n    // add the deserialized text to the actor's property field.\n    insertProperties(actor, properties);\n  } catch (e) {\n    log.error('error while parsing actor properties text', e);\n  }\n};\n\n/**\n * @param {any} actor\n * @param {any} properties\n */\nfunction insertProperties(actor, properties) {\n  if (actor.properties == null) {\n    actor.properties = properties;\n  } else {\n    for (let key in properties) {\n      actor.properties[key] = properties[key];\n    }\n  }\n}\n\n/**\n *\n */\nfunction boxEnd() {\n  currentBox = undefined;\n}\n\nexport const addDetails = function (actorId, text) {\n  // find the actor\n  const actor = getActor(actorId);\n  const elem = document.getElementById(text.text);\n\n  // JSON.parse the text\n  try {\n    const text = elem.innerHTML;\n    const details = JSON.parse(text);\n    // add the deserialized text to the actor's property field.\n    if (details['properties']) {\n      insertProperties(actor, details['properties']);\n    }\n\n    if (details['links']) {\n      insertLinks(actor, details['links']);\n    }\n  } catch (e) {\n    log.error('error while parsing actor details text', e);\n  }\n};\n\nexport const getActorProperty = function (actor, key) {\n  if (actor !== undefined && actor.properties !== undefined) {\n    return actor.properties[key];\n  }\n\n  return undefined;\n};\n\nexport const apply = function (param) {\n  if (Array.isArray(param)) {\n    param.forEach(function (item) {\n      apply(item);\n    });\n  } else {\n    switch (param.type) {\n      case 'sequenceIndex':\n        messages.push({\n          from: undefined,\n          to: undefined,\n          message: {\n            start: param.sequenceIndex,\n            step: param.sequenceIndexStep,\n            visible: param.sequenceVisible,\n          },\n          wrap: false,\n          type: param.signalType,\n        });\n        break;\n      case 'addParticipant':\n        addActor(param.actor, param.actor, param.description, 'participant');\n        break;\n      case 'addActor':\n        addActor(param.actor, param.actor, param.description, 'actor');\n        break;\n      case 'activeStart':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'activeEnd':\n        addSignal(param.actor, undefined, undefined, param.signalType);\n        break;\n      case 'addNote':\n        addNote(param.actor, param.placement, param.text);\n        break;\n      case 'addLinks':\n        addLinks(param.actor, param.text);\n        break;\n      case 'addALink':\n        addALink(param.actor, param.text);\n        break;\n      case 'addProperties':\n        addProperties(param.actor, param.text);\n        break;\n      case 'addDetails':\n        addDetails(param.actor, param.text);\n        break;\n      case 'addMessage':\n        addSignal(param.from, param.to, param.msg, param.signalType);\n        break;\n      case 'boxStart':\n        addBox(param.boxData);\n        break;\n      case 'boxEnd':\n        boxEnd();\n        break;\n      case 'loopStart':\n        addSignal(undefined, undefined, param.loopText, param.signalType);\n        break;\n      case 'loopEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'rectStart':\n        addSignal(undefined, undefined, param.color, param.signalType);\n        break;\n      case 'rectEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'optStart':\n        addSignal(undefined, undefined, param.optText, param.signalType);\n        break;\n      case 'optEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'altStart':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'else':\n        addSignal(undefined, undefined, param.altText, param.signalType);\n        break;\n      case 'altEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'setAccTitle':\n        setAccTitle(param.text);\n        break;\n      case 'parStart':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'and':\n        addSignal(undefined, undefined, param.parText, param.signalType);\n        break;\n      case 'parEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'criticalStart':\n        addSignal(undefined, undefined, param.criticalText, param.signalType);\n        break;\n      case 'option':\n        addSignal(undefined, undefined, param.optionText, param.signalType);\n        break;\n      case 'criticalEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n      case 'breakStart':\n        addSignal(undefined, undefined, param.breakText, param.signalType);\n        break;\n      case 'breakEnd':\n        addSignal(undefined, undefined, undefined, param.signalType);\n        break;\n    }\n  }\n};\n\nexport default {\n  addActor,\n  addMessage,\n  addSignal,\n  addLinks,\n  addDetails,\n  addProperties,\n  autoWrap,\n  setWrap,\n  enableSequenceNumbers,\n  disableSequenceNumbers,\n  showSequenceNumbers,\n  getMessages,\n  getActors,\n  getActor,\n  getActorKeys,\n  getActorProperty,\n  getAccTitle,\n  getBoxes,\n  getDiagramTitle,\n  setDiagramTitle,\n  parseDirective,\n  getConfig: () => configApi.getConfig().sequence,\n  clear,\n  parseMessage,\n  parseBoxData,\n  LINETYPE,\n  ARROWTYPE,\n  PLACEMENT,\n  addNote,\n  setAccTitle,\n  apply,\n  setAccDescription,\n  getAccDescription,\n  hasAtLeastOneBox,\n  hasAtLeastOneBoxWithTitle,\n};\n", "const getStyles = (options) =>\n  `.actor {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n\n  text.actor > tspan {\n    fill: ${options.actorTextColor};\n    stroke: none;\n  }\n\n  .actor-line {\n    stroke: ${options.actorLineColor};\n  }\n\n  .messageLine0 {\n    stroke-width: 1.5;\n    stroke-dasharray: none;\n    stroke: ${options.signalColor};\n  }\n\n  .messageLine1 {\n    stroke-width: 1.5;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.signalColor};\n  }\n\n  #arrowhead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .sequenceNumber {\n    fill: ${options.sequenceNumberColor};\n  }\n\n  #sequencenumber {\n    fill: ${options.signalColor};\n  }\n\n  #crosshead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .messageText {\n    fill: ${options.signalTextColor};\n    stroke: none;\n  }\n\n  .labelBox {\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBkgColor};\n  }\n\n  .labelText, .labelText > tspan {\n    fill: ${options.labelTextColor};\n    stroke: none;\n  }\n\n  .loopText, .loopText > tspan {\n    fill: ${options.loopTextColor};\n    stroke: none;\n  }\n\n  .loopLine {\n    stroke-width: 2px;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBorderColor};\n  }\n\n  .note {\n    //stroke: #decc93;\n    stroke: ${options.noteBorderColor};\n    fill: ${options.noteBkgColor};\n  }\n\n  .noteText, .noteText > tspan {\n    fill: ${options.noteTextColor};\n    stroke: none;\n  }\n\n  .activation0 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation1 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation2 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .actorPopupMenu {\n    position: absolute;\n  }\n\n  .actorPopupMenuPanel {\n    position: absolute;\n    fill: ${options.actorBkg};\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\n}\n  .actor-man line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n  .actor-man circle, line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n    stroke-width: 2px;\n  }\n`;\n\nexport default getStyles;\n", "import common from '../common/common';\nimport { addFunction } from '../../interactionDb';\nimport { parseFontSize } from '../../utils';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\n\nexport const drawRect = function (elem, rectData) {\n  const rectElem = elem.append('rect');\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.y);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', rectData.width);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n\n  if (rectData.class !== undefined) {\n    rectElem.attr('class', rectData.class);\n  }\n\n  return rectElem;\n};\n\n// const sanitizeUrl = function (s) {\n//   return s\n//     .replace(/&/g, '&amp;')\n//     .replace(/</g, '&lt;')\n//     .replace(/javascript:/g, '');\n// };\n\nconst addPopupInteraction = (id, actorCnt) => {\n  addFunction(() => {\n    const arr = document.querySelectorAll(id);\n    // This will be the case when running in sandboxed mode\n    if (arr.length === 0) {\n      return;\n    }\n    arr[0].addEventListener('mouseover', function () {\n      popupMenuUpFunc('actor' + actorCnt + '_popup');\n    });\n    arr[0].addEventListener('mouseout', function () {\n      popupMenuDownFunc('actor' + actorCnt + '_popup');\n    });\n  });\n};\nexport const drawPopup = function (elem, actor, minMenuWidth, textAttrs, forceMenus) {\n  if (actor.links === undefined || actor.links === null || Object.keys(actor.links).length === 0) {\n    return { height: 0, width: 0 };\n  }\n\n  const links = actor.links;\n  const actorCnt = actor.actorCnt;\n  const rectData = actor.rectData;\n\n  var displayValue = 'none';\n  if (forceMenus) {\n    displayValue = 'block !important';\n  }\n\n  const g = elem.append('g');\n  g.attr('id', 'actor' + actorCnt + '_popup');\n  g.attr('class', 'actorPopupMenu');\n  g.attr('display', displayValue);\n  addPopupInteraction('#actor' + actorCnt + '_popup', actorCnt);\n  var actorClass = '';\n  if (rectData.class !== undefined) {\n    actorClass = ' ' + rectData.class;\n  }\n\n  let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n\n  const rectElem = g.append('rect');\n  rectElem.attr('class', 'actorPopupMenuPanel' + actorClass);\n  rectElem.attr('x', rectData.x);\n  rectElem.attr('y', rectData.height);\n  rectElem.attr('fill', rectData.fill);\n  rectElem.attr('stroke', rectData.stroke);\n  rectElem.attr('width', menuWidth);\n  rectElem.attr('height', rectData.height);\n  rectElem.attr('rx', rectData.rx);\n  rectElem.attr('ry', rectData.ry);\n  if (links != null) {\n    var linkY = 20;\n    for (let key in links) {\n      var linkElem = g.append('a');\n      var sanitizedLink = sanitizeUrl(links[key]);\n      linkElem.attr('xlink:href', sanitizedLink);\n      linkElem.attr('target', '_blank');\n\n      _drawMenuItemTextCandidateFunc(textAttrs)(\n        key,\n        linkElem,\n        rectData.x + 10,\n        rectData.height + linkY,\n        menuWidth,\n        20,\n        { class: 'actor' },\n        textAttrs\n      );\n\n      linkY += 30;\n    }\n  }\n\n  rectElem.attr('height', linkY);\n\n  return { height: rectData.height + linkY, width: menuWidth };\n};\n\nexport const drawImage = function (elem, x, y, link) {\n  const imageElem = elem.append('image');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', sanitizedLink);\n};\n\nexport const drawEmbeddedImage = function (elem, x, y, link) {\n  const imageElem = elem.append('use');\n  imageElem.attr('x', x);\n  imageElem.attr('y', y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr('xlink:href', '#' + sanitizedLink);\n};\n\nexport const popupMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'block'; }\"\n  );\n};\n\nexport const popdownMenu = function (popid) {\n  return (\n    \"var pu = document.getElementById('\" +\n    popid +\n    \"'); if (pu != null) { pu.style.display = 'none'; }\"\n  );\n};\n\nconst popupMenuUpFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'block';\n  }\n};\n\nconst popupMenuDownFunc = function (popupId) {\n  var pu = document.getElementById(popupId);\n  if (pu != null) {\n    pu.style.display = 'none';\n  }\n};\nexport const drawText = function (elem, textData) {\n  let prevTextHeight = 0,\n    textHeight = 0;\n  const lines = textData.text.split(common.lineBreakRegex);\n\n  const [_textFontSize, _textFontSizePx] = parseFontSize(textData.fontSize);\n\n  let textElems = [];\n  let dy = 0;\n  let yfunc = () => textData.y;\n  if (\n    textData.valign !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.textMargin > 0\n  ) {\n    switch (textData.valign) {\n      case 'top':\n      case 'start':\n        yfunc = () => Math.round(textData.y + textData.textMargin);\n        break;\n      case 'middle':\n      case 'center':\n        yfunc = () =>\n          Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n        break;\n      case 'bottom':\n      case 'end':\n        yfunc = () =>\n          Math.round(\n            textData.y +\n              (prevTextHeight + textHeight + 2 * textData.textMargin) -\n              textData.textMargin\n          );\n        break;\n    }\n  }\n  if (\n    textData.anchor !== undefined &&\n    textData.textMargin !== undefined &&\n    textData.width !== undefined\n  ) {\n    switch (textData.anchor) {\n      case 'left':\n      case 'start':\n        textData.x = Math.round(textData.x + textData.textMargin);\n        textData.anchor = 'start';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'middle':\n      case 'center':\n        textData.x = Math.round(textData.x + textData.width / 2);\n        textData.anchor = 'middle';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n      case 'right':\n      case 'end':\n        textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n        textData.anchor = 'end';\n        textData.dominantBaseline = 'middle';\n        textData.alignmentBaseline = 'middle';\n        break;\n    }\n  }\n  for (let [i, line] of lines.entries()) {\n    if (\n      textData.textMargin !== undefined &&\n      textData.textMargin === 0 &&\n      _textFontSize !== undefined\n    ) {\n      dy = i * _textFontSize;\n    }\n\n    const textElem = elem.append('text');\n    textElem.attr('x', textData.x);\n    textElem.attr('y', yfunc());\n    if (textData.anchor !== undefined) {\n      textElem\n        .attr('text-anchor', textData.anchor)\n        .attr('dominant-baseline', textData.dominantBaseline)\n        .attr('alignment-baseline', textData.alignmentBaseline);\n    }\n    if (textData.fontFamily !== undefined) {\n      textElem.style('font-family', textData.fontFamily);\n    }\n    if (_textFontSizePx !== undefined) {\n      textElem.style('font-size', _textFontSizePx);\n    }\n    if (textData.fontWeight !== undefined) {\n      textElem.style('font-weight', textData.fontWeight);\n    }\n    if (textData.fill !== undefined) {\n      textElem.attr('fill', textData.fill);\n    }\n    if (textData.class !== undefined) {\n      textElem.attr('class', textData.class);\n    }\n    if (textData.dy !== undefined) {\n      textElem.attr('dy', textData.dy);\n    } else if (dy !== 0) {\n      textElem.attr('dy', dy);\n    }\n\n    if (textData.tspan) {\n      const span = textElem.append('tspan');\n      span.attr('x', textData.x);\n      if (textData.fill !== undefined) {\n        span.attr('fill', textData.fill);\n      }\n      span.text(line);\n    } else {\n      textElem.text(line);\n    }\n    if (\n      textData.valign !== undefined &&\n      textData.textMargin !== undefined &&\n      textData.textMargin > 0\n    ) {\n      textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n      prevTextHeight = textHeight;\n    }\n\n    textElems.push(textElem);\n  }\n\n  return textElems;\n};\n\nexport const drawLabel = function (elem, txtObject) {\n  /**\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} cut\n   * @returns {any}\n   */\n  function genPoints(x, y, width, height, cut) {\n    return (\n      x +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      y +\n      ' ' +\n      (x + width) +\n      ',' +\n      (y + height - cut) +\n      ' ' +\n      (x + width - cut * 1.2) +\n      ',' +\n      (y + height) +\n      ' ' +\n      x +\n      ',' +\n      (y + height)\n    );\n  }\n  const polygon = elem.append('polygon');\n  polygon.attr('points', genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n  polygon.attr('class', 'labelBox');\n\n  txtObject.y = txtObject.y + txtObject.height / 2;\n\n  drawText(elem, txtObject);\n  return polygon;\n};\n\nlet actorCnt = -1;\n\nexport const fixLifeLineHeights = (diagram, bounds) => {\n  if (!diagram.selectAll) {\n    return;\n  }\n  diagram\n    .selectAll('.actor-line')\n    .attr('class', '200')\n    .attr('y2', bounds - 55);\n};\n\n/**\n * Draws an actor in the diagram with the attached line\n *\n * @param {any} elem - The diagram we'll draw to.\n * @param {any} actor - The actor to draw.\n * @param {any} conf - DrawText implementation discriminator object\n * @param {boolean} isFooter - If the actor is the footer one\n */\nconst drawActorTypeParticipant = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 5;\n\n  const boxpluslineGroup = elem.append('g');\n  var g = boxpluslineGroup;\n\n  if (!isFooter) {\n    actorCnt++;\n    g.append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n\n    g = boxpluslineGroup.append('g');\n    actor.actorCnt = actorCnt;\n\n    if (actor.links != null) {\n      g.attr('id', 'root-' + actorCnt);\n      addPopupInteraction('#root-' + actorCnt, actorCnt);\n    }\n  }\n\n  const rect = getNoteRect();\n  var cssclass = 'actor';\n  if (actor.properties != null && actor.properties['class']) {\n    cssclass = actor.properties['class'];\n  } else {\n    rect.fill = '#eaeaea';\n  }\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = cssclass;\n  rect.rx = 3;\n  rect.ry = 3;\n  const rectElem = drawRect(g, rect);\n  actor.rectData = rect;\n\n  if (actor.properties != null && actor.properties['icon']) {\n    const iconSrc = actor.properties['icon'].trim();\n    if (iconSrc.charAt(0) === '@') {\n      drawEmbeddedImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n    } else {\n      drawImage(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n    }\n  }\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  let height = actor.height;\n  if (rectElem.node) {\n    const bounds = rectElem.node().getBBox();\n    actor.height = bounds.height;\n    height = bounds.height;\n  }\n\n  return height;\n};\n\nconst drawActorTypeActor = function (elem, actor, conf, isFooter) {\n  const center = actor.x + actor.width / 2;\n  const centerY = actor.y + 80;\n\n  if (!isFooter) {\n    actorCnt++;\n    elem\n      .append('line')\n      .attr('id', 'actor' + actorCnt)\n      .attr('x1', center)\n      .attr('y1', centerY)\n      .attr('x2', center)\n      .attr('y2', 2000)\n      .attr('class', 'actor-line')\n      .attr('stroke-width', '0.5px')\n      .attr('stroke', '#999');\n  }\n  const actElem = elem.append('g');\n  actElem.attr('class', 'actor-man');\n\n  const rect = getNoteRect();\n  rect.x = actor.x;\n  rect.y = actor.y;\n  rect.fill = '#eaeaea';\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = 'actor';\n  rect.rx = 3;\n  rect.ry = 3;\n  // drawRect(actElem, rect);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-torso' + actorCnt)\n    .attr('x1', center)\n    .attr('y1', actor.y + 25)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n\n  actElem\n    .append('line')\n    .attr('id', 'actor-man-arms' + actorCnt)\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 33)\n    .attr('x2', center + 18)\n    .attr('y2', actor.y + 33);\n  actElem\n    .append('line')\n    .attr('x1', center - 18)\n    .attr('y1', actor.y + 60)\n    .attr('x2', center)\n    .attr('y2', actor.y + 45);\n  actElem\n    .append('line')\n    .attr('x1', center)\n    .attr('y1', actor.y + 45)\n    .attr('x2', center + 16)\n    .attr('y2', actor.y + 60);\n\n  const circle = actElem.append('circle');\n  circle.attr('cx', actor.x + actor.width / 2);\n  circle.attr('cy', actor.y + 10);\n  circle.attr('r', 15);\n  circle.attr('width', actor.width);\n  circle.attr('height', actor.height);\n\n  const bounds = actElem.node().getBBox();\n  actor.height = bounds.height;\n\n  _drawTextCandidateFunc(conf)(\n    actor.description,\n    actElem,\n    rect.x,\n    rect.y + 35,\n    rect.width,\n    rect.height,\n    { class: 'actor' },\n    conf\n  );\n\n  return actor.height;\n};\n\nexport const drawActor = function (elem, actor, conf, isFooter) {\n  switch (actor.type) {\n    case 'actor':\n      return drawActorTypeActor(elem, actor, conf, isFooter);\n    case 'participant':\n      return drawActorTypeParticipant(elem, actor, conf, isFooter);\n  }\n};\n\nexport const drawBox = function (elem, box, conf) {\n  const boxplustextGroup = elem.append('g');\n  const g = boxplustextGroup;\n  drawBackgroundRect(g, box);\n  if (box.name) {\n    _drawTextCandidateFunc(conf)(\n      box.name,\n      g,\n      box.x,\n      box.y + (box.textMaxHeight || 0) / 2,\n      box.width,\n      0,\n      { class: 'text' },\n      conf\n    );\n  }\n  g.lower();\n};\n\nexport const anchorElement = function (elem) {\n  return elem.append('g');\n};\n/**\n * Draws an activation in the diagram\n *\n * @param {any} elem - Element to append activation rect.\n * @param {any} bounds - Activation box bounds.\n * @param {any} verticalPos - Precise y coordinate of bottom activation box edge.\n * @param {any} conf - Sequence diagram config object.\n * @param {any} actorActivations - Number of activations on the actor.\n */\nexport const drawActivation = function (elem, bounds, verticalPos, conf, actorActivations) {\n  const rect = getNoteRect();\n  const g = bounds.anchored;\n  rect.x = bounds.startx;\n  rect.y = bounds.starty;\n  rect.class = 'activation' + (actorActivations % 3); // Will evaluate to 0, 1 or 2\n  rect.width = bounds.stopx - bounds.startx;\n  rect.height = verticalPos - bounds.starty;\n  drawRect(g, rect);\n};\n\n/**\n * Draws a loop in the diagram\n *\n * @param {any} elem - Element to append the loop to.\n * @param {any} loopModel - LoopModel of the given loop.\n * @param {any} labelText - Text within the loop.\n * @param {any} conf - Diagram configuration\n * @returns {any}\n */\nexport const drawLoop = function (elem, loopModel, labelText, conf) {\n  const {\n    boxMargin,\n    boxTextMargin,\n    labelBoxHeight,\n    labelBoxWidth,\n    messageFontFamily: fontFamily,\n    messageFontSize: fontSize,\n    messageFontWeight: fontWeight,\n  } = conf;\n  const g = elem.append('g');\n  const drawLoopLine = function (startx, starty, stopx, stopy) {\n    return g\n      .append('line')\n      .attr('x1', startx)\n      .attr('y1', starty)\n      .attr('x2', stopx)\n      .attr('y2', stopy)\n      .attr('class', 'loopLine');\n  };\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n  drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n  if (loopModel.sections !== undefined) {\n    loopModel.sections.forEach(function (item) {\n      drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\n        'stroke-dasharray',\n        '3, 3'\n      );\n    });\n  }\n\n  let txt = getTextObj();\n  txt.text = labelText;\n  txt.x = loopModel.startx;\n  txt.y = loopModel.starty;\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.tspan = false;\n  txt.width = labelBoxWidth || 50;\n  txt.height = labelBoxHeight || 20;\n  txt.textMargin = boxTextMargin;\n  txt.class = 'labelText';\n\n  drawLabel(g, txt);\n  txt = getTextObj();\n  txt.text = loopModel.title;\n  txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n  txt.y = loopModel.starty + boxMargin + boxTextMargin;\n  txt.anchor = 'middle';\n  txt.valign = 'middle';\n  txt.textMargin = boxTextMargin;\n  txt.class = 'loopText';\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.wrap = true;\n\n  let textElem = drawText(g, txt);\n\n  if (loopModel.sectionTitles !== undefined) {\n    loopModel.sectionTitles.forEach(function (item, idx) {\n      if (item.message) {\n        txt.text = item.message;\n        txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n        txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n        txt.class = 'loopText';\n        txt.anchor = 'middle';\n        txt.valign = 'middle';\n        txt.tspan = false;\n        txt.fontFamily = fontFamily;\n        txt.fontSize = fontSize;\n        txt.fontWeight = fontWeight;\n        txt.wrap = loopModel.wrap;\n        textElem = drawText(g, txt);\n        let sectionHeight = Math.round(\n          textElem\n            .map((te) => (te._groups || te)[0][0].getBBox().height)\n            .reduce((acc, curr) => acc + curr)\n        );\n        loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n      }\n    });\n  }\n\n  loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n  return g;\n};\n\n/**\n * Draws a background rectangle\n *\n * @param {any} elem Diagram (reference for bounds)\n * @param {any} bounds Shape of the rectangle\n */\nexport const drawBackgroundRect = function (elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: 'rect',\n  });\n  rectElem.lower();\n};\n\nexport const insertDatabaseIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'database')\n    .attr('fill-rule', 'evenodd')\n    .attr('clip-rule', 'evenodd')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z'\n    );\n};\n\nexport const insertComputerIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'computer')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z'\n    );\n};\n\nexport const insertClockIcon = function (elem) {\n  elem\n    .append('defs')\n    .append('symbol')\n    .attr('id', 'clock')\n    .attr('width', '24')\n    .attr('height', '24')\n    .append('path')\n    .attr('transform', 'scale(.5)')\n    .attr(\n      'd',\n      'M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z'\n    );\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param elem\n */\nexport const insertArrowHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z'); // this is actual shape for arrowhead\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowFilledHead = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'filled-head')\n    .attr('refX', 18)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n/**\n * Setup node number. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertSequenceNumber = function (elem) {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', 'sequencenumber')\n    .attr('refX', 15)\n    .attr('refY', 15)\n    .attr('markerWidth', 60)\n    .attr('markerHeight', 40)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', 15)\n    .attr('cy', 15)\n    .attr('r', 6);\n  // .style(\"fill\", '#f00');\n};\n/**\n * Setup cross head and define the marker. The result is appended to the svg.\n *\n * @param {any} elem\n */\nexport const insertArrowCrossHead = function (elem) {\n  const defs = elem.append('defs');\n  const marker = defs\n    .append('marker')\n    .attr('id', 'crosshead')\n    .attr('markerWidth', 15)\n    .attr('markerHeight', 8)\n    .attr('orient', 'auto')\n    .attr('refX', 4)\n    .attr('refY', 5);\n  // The cross\n  marker\n    .append('path')\n    .attr('fill', 'none')\n    .attr('stroke', '#000000')\n    .style('stroke-dasharray', '0, 0')\n    .attr('stroke-width', '1pt')\n    .attr('d', 'M 1,2 L 6,7 M 6,2 L 1,7');\n  // this is actual shape for arrowhead\n};\n\nexport const getTextObj = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: undefined,\n    anchor: undefined,\n    style: '#666',\n    width: undefined,\n    height: undefined,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: undefined,\n  };\n};\n\nexport const getNoteRect = function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: '#EDF2AE',\n    stroke: '#666',\n    width: 100,\n    anchor: 'start',\n    height: 100,\n    rx: 0,\n    ry: 0,\n  };\n};\n\nconst _drawTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x + width / 2)\n      .attr('y', y + height / 2 + 5)\n      .style('text-anchor', 'middle')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const [_actorFontSize, _actorFontSizePx] = parseFontSize(actorFontSize);\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * _actorFontSize - (_actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x + width / 2)\n        .attr('y', y)\n        .style('text-anchor', 'middle')\n        .style('font-size', _actorFontSizePx)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text\n        .append('tspan')\n        .attr('x', x + width / 2)\n        .attr('dy', dy)\n        .text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nconst _drawMenuItemTextCandidateFunc = (function () {\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   */\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g\n      .append('text')\n      .attr('x', x)\n      .attr('y', y)\n      .style('text-anchor', 'start')\n      .text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byTspan(content, g, x, y, width, height, textAttrs, conf) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf;\n\n    const lines = content.split(common.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - (actorFontSize * (lines.length - 1)) / 2;\n      const text = g\n        .append('text')\n        .attr('x', x)\n        .attr('y', y)\n        .style('text-anchor', 'start')\n        .style('font-size', actorFontSize)\n        .style('font-weight', actorFontWeight)\n        .style('font-family', actorFontFamily);\n      text.append('tspan').attr('x', x).attr('dy', dy).text(lines[i]);\n\n      text\n        .attr('y', y + height / 2.0)\n        .attr('dominant-baseline', 'central')\n        .attr('alignment-baseline', 'central');\n\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n\n  /**\n   * @param {any} content\n   * @param {any} g\n   * @param {any} x\n   * @param {any} y\n   * @param {any} width\n   * @param {any} height\n   * @param {any} textAttrs\n   * @param {any} conf\n   */\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const s = g.append('switch');\n    const f = s\n      .append('foreignObject')\n      .attr('x', x)\n      .attr('y', y)\n      .attr('width', width)\n      .attr('height', height);\n\n    const text = f\n      .append('xhtml:div')\n      .style('display', 'table')\n      .style('height', '100%')\n      .style('width', '100%');\n\n    text\n      .append('div')\n      .style('display', 'table-cell')\n      .style('text-align', 'center')\n      .style('vertical-align', 'middle')\n      .text(content);\n\n    byTspan(content, s, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n\n  /**\n   * @param {any} toText\n   * @param {any} fromTextAttrsDict\n   */\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n\n  return function (conf) {\n    return conf.textPlacement === 'fo' ? byFo : conf.textPlacement === 'old' ? byText : byTspan;\n  };\n})();\n\nexport default {\n  drawRect,\n  drawText,\n  drawLabel,\n  drawActor,\n  drawBox,\n  drawPopup,\n  drawImage,\n  drawEmbeddedImage,\n  anchorElement,\n  drawActivation,\n  drawLoop,\n  drawBackgroundRect,\n  insertArrowHead,\n  insertArrowFilledHead,\n  insertSequenceNumber,\n  insertArrowCrossHead,\n  insertDatabaseIcon,\n  insertComputerIcon,\n  insertClockIcon,\n  getTextObj,\n  getNoteRect,\n  popupMenu,\n  popdownMenu,\n  fixLifeLineHeights,\n  sanitizeUrl,\n};\n", "// @ts-nocheck TODO: fix file\nimport { select, selectAll } from 'd3';\nimport svgDraw, { drawText, fixLifeLineHeights } from './svgDraw';\nimport { log } from '../../logger';\nimport common from '../common/common';\nimport * as configApi from '../../config';\nimport assignWithDepth from '../../assignWithDepth';\nimport utils from '../../utils';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport { Diagram } from '../../Diagram';\n\nlet conf = {};\n\nexport const bounds = {\n  data: {\n    startx: undefined,\n    stopx: undefined,\n    starty: undefined,\n    stopy: undefined,\n  },\n  verticalPos: 0,\n  sequenceItems: [],\n  activations: [],\n  models: {\n    getHeight: function () {\n      return (\n        Math.max.apply(\n          null,\n          this.actors.length === 0 ? [0] : this.actors.map((actor) => actor.height || 0)\n        ) +\n        (this.loops.length === 0\n          ? 0\n          : this.loops.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.messages.length === 0\n          ? 0\n          : this.messages.map((it) => it.height || 0).reduce((acc, h) => acc + h)) +\n        (this.notes.length === 0\n          ? 0\n          : this.notes.map((it) => it.height || 0).reduce((acc, h) => acc + h))\n      );\n    },\n    clear: function () {\n      this.actors = [];\n      this.boxes = [];\n      this.loops = [];\n      this.messages = [];\n      this.notes = [];\n    },\n    addBox: function (boxModel) {\n      this.boxes.push(boxModel);\n    },\n    addActor: function (actorModel) {\n      this.actors.push(actorModel);\n    },\n    addLoop: function (loopModel) {\n      this.loops.push(loopModel);\n    },\n    addMessage: function (msgModel) {\n      this.messages.push(msgModel);\n    },\n    addNote: function (noteModel) {\n      this.notes.push(noteModel);\n    },\n    lastActor: function () {\n      return this.actors[this.actors.length - 1];\n    },\n    lastLoop: function () {\n      return this.loops[this.loops.length - 1];\n    },\n    lastMessage: function () {\n      return this.messages[this.messages.length - 1];\n    },\n    lastNote: function () {\n      return this.notes[this.notes.length - 1];\n    },\n    actors: [],\n    boxes: [],\n    loops: [],\n    messages: [],\n    notes: [],\n  },\n  init: function () {\n    this.sequenceItems = [];\n    this.activations = [];\n    this.models.clear();\n    this.data = {\n      startx: undefined,\n      stopx: undefined,\n      starty: undefined,\n      stopy: undefined,\n    };\n    this.verticalPos = 0;\n    setConf(configApi.getConfig());\n  },\n  updateVal: function (obj, key, val, fun) {\n    if (obj[key] === undefined) {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function (startx, starty, stopx, stopy) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const _self = this;\n    let cnt = 0;\n    /** @param type - Either `activation` or `undefined` */\n    function updateFn(type?: 'activation') {\n      return function updateItemBounds(item) {\n        cnt++;\n        // The loop sequenceItems is a stack so the biggest margins in the beginning of the sequenceItems\n        const n = _self.sequenceItems.length - cnt + 1;\n\n        _self.updateVal(item, 'starty', starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n        _self.updateVal(bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n        if (!(type === 'activation')) {\n          _self.updateVal(item, 'startx', startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\n          _self.updateVal(bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n\n    this.sequenceItems.forEach(updateFn());\n    this.activations.forEach(updateFn('activation'));\n  },\n  insert: function (startx, starty, stopx, stopy) {\n    const _startx = Math.min(startx, stopx);\n    const _stopx = Math.max(startx, stopx);\n    const _starty = Math.min(starty, stopy);\n    const _stopy = Math.max(starty, stopy);\n\n    this.updateVal(bounds.data, 'startx', _startx, Math.min);\n    this.updateVal(bounds.data, 'starty', _starty, Math.min);\n    this.updateVal(bounds.data, 'stopx', _stopx, Math.max);\n    this.updateVal(bounds.data, 'stopy', _stopy, Math.max);\n\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  newActivation: function (message, diagram, actors) {\n    const actorRect = actors[message.from.actor];\n    const stackedSize = actorActivations(message.from.actor).length || 0;\n    const x = actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n    this.activations.push({\n      startx: x,\n      starty: this.verticalPos + 2,\n      stopx: x + conf.activationWidth,\n      stopy: undefined,\n      actor: message.from.actor,\n      anchored: svgDraw.anchorElement(diagram),\n    });\n  },\n  endActivation: function (message) {\n    // find most recent activation for given actor\n    const lastActorActivationIdx = this.activations\n      .map(function (activation) {\n        return activation.actor;\n      })\n      .lastIndexOf(message.from.actor);\n    return this.activations.splice(lastActorActivationIdx, 1)[0];\n  },\n  createLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    return {\n      startx: undefined,\n      starty: this.verticalPos,\n      stopx: undefined,\n      stopy: undefined,\n      title: title.message,\n      wrap: title.wrap,\n      width: title.width,\n      height: 0,\n      fill: fill,\n    };\n  },\n  newLoop: function (title = { message: undefined, wrap: false, width: undefined }, fill) {\n    this.sequenceItems.push(this.createLoop(title, fill));\n  },\n  endLoop: function () {\n    return this.sequenceItems.pop();\n  },\n  addSectionToLoop: function (message) {\n    const loop = this.sequenceItems.pop();\n    loop.sections = loop.sections || [];\n    loop.sectionTitles = loop.sectionTitles || [];\n    loop.sections.push({ y: bounds.getVerticalPos(), height: 0 });\n    loop.sectionTitles.push(message);\n    this.sequenceItems.push(loop);\n  },\n  bumpVerticalPos: function (bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = this.verticalPos;\n  },\n  getVerticalPos: function () {\n    return this.verticalPos;\n  },\n  getBounds: function () {\n    return { bounds: this.data, models: this.models };\n  },\n};\n\n/** Options for drawing a note in {@link drawNote} */\ninterface NoteModel {\n  /** x axis start position */\n  startx: number;\n  /** y axis position */\n  starty: number;\n  /** the message to be shown */\n  message: string;\n  /** Set this with a custom width to override the default configured width. */\n  width: number;\n}\n\n/**\n * Draws an note in the diagram with the attached line\n *\n * @param elem - The diagram to draw to.\n * @param noteModel - Note model options.\n */\nconst drawNote = function (elem: any, noteModel: NoteModel) {\n  bounds.bumpVerticalPos(conf.boxMargin);\n  noteModel.height = conf.boxMargin;\n  noteModel.starty = bounds.getVerticalPos();\n  const rect = svgDraw.getNoteRect();\n  rect.x = noteModel.startx;\n  rect.y = noteModel.starty;\n  rect.width = noteModel.width || conf.width;\n  rect.class = 'note';\n\n  const g = elem.append('g');\n  const rectElem = svgDraw.drawRect(g, rect);\n  const textObj = svgDraw.getTextObj();\n  textObj.x = noteModel.startx;\n  textObj.y = noteModel.starty;\n  textObj.width = rect.width;\n  textObj.dy = '1em';\n  textObj.text = noteModel.message;\n  textObj.class = 'noteText';\n  textObj.fontFamily = conf.noteFontFamily;\n  textObj.fontSize = conf.noteFontSize;\n  textObj.fontWeight = conf.noteFontWeight;\n  textObj.anchor = conf.noteAlign;\n  textObj.textMargin = conf.noteMargin;\n  textObj.valign = 'center';\n\n  const textElem = drawText(g, textObj);\n\n  const textHeight = Math.round(\n    textElem\n      .map((te) => (te._groups || te)[0][0].getBBox().height)\n      .reduce((acc, curr) => acc + curr)\n  );\n\n  rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n  noteModel.height += textHeight + 2 * conf.noteMargin;\n  bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n  noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n  noteModel.stopx = noteModel.startx + rect.width;\n  bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n  bounds.models.addNote(noteModel);\n};\n\nconst messageFont = (cnf) => {\n  return {\n    fontFamily: cnf.messageFontFamily,\n    fontSize: cnf.messageFontSize,\n    fontWeight: cnf.messageFontWeight,\n  };\n};\nconst noteFont = (cnf) => {\n  return {\n    fontFamily: cnf.noteFontFamily,\n    fontSize: cnf.noteFontSize,\n    fontWeight: cnf.noteFontWeight,\n  };\n};\nconst actorFont = (cnf) => {\n  return {\n    fontFamily: cnf.actorFontFamily,\n    fontSize: cnf.actorFontSize,\n    fontWeight: cnf.actorFontWeight,\n  };\n};\n\n/**\n * Process a message by adding its dimensions to the bound. It returns the Y coordinate of the\n * message so it can be drawn later. We do not draw the message at this point so the arrowhead can\n * be on top of the activation box.\n *\n * @param _diagram - The parent of the message element.\n * @param msgModel - The model containing fields describing a message\n * @returns `lineStartY` - The Y coordinate at which the message line starts\n */\nfunction boundMessage(_diagram, msgModel): number {\n  bounds.bumpVerticalPos(10);\n  const { startx, stopx, message } = msgModel;\n  const lines = common.splitBreaks(message).length;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const lineHeight = textDims.height / lines;\n  msgModel.height += lineHeight;\n\n  bounds.bumpVerticalPos(lineHeight);\n\n  let lineStartY;\n  let totalOffset = textDims.height - 10;\n  const textWidth = textDims.width;\n\n  if (startx === stopx) {\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    if (!conf.rightAngles) {\n      totalOffset += conf.boxMargin;\n      lineStartY = bounds.getVerticalPos() + totalOffset;\n    }\n    totalOffset += 30;\n    const dx = Math.max(textWidth / 2, conf.width / 2);\n    bounds.insert(\n      startx - dx,\n      bounds.getVerticalPos() - 10 + totalOffset,\n      stopx + dx,\n      bounds.getVerticalPos() + 30 + totalOffset\n    );\n  } else {\n    totalOffset += conf.boxMargin;\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    bounds.insert(startx, lineStartY - 10, stopx, lineStartY);\n  }\n  bounds.bumpVerticalPos(totalOffset);\n  msgModel.height += totalOffset;\n  msgModel.stopy = msgModel.starty + msgModel.height;\n  bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n\n  return lineStartY;\n}\n\n/**\n * Draws a message. Note that the bounds have previously been updated by boundMessage.\n *\n * @param diagram - The parent of the message element\n * @param msgModel - The model containing fields describing a message\n * @param lineStartY - The Y coordinate at which the message line starts\n * @param diagObj - The diagram object.\n */\nconst drawMessage = function (diagram, msgModel, lineStartY: number, diagObj: Diagram) {\n  const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n  const textDims = utils.calculateTextDimensions(message, messageFont(conf));\n  const textObj = svgDraw.getTextObj();\n  textObj.x = startx;\n  textObj.y = starty + 10;\n  textObj.width = stopx - startx;\n  textObj.class = 'messageText';\n  textObj.dy = '1em';\n  textObj.text = message;\n  textObj.fontFamily = conf.messageFontFamily;\n  textObj.fontSize = conf.messageFontSize;\n  textObj.fontWeight = conf.messageFontWeight;\n  textObj.anchor = conf.messageAlign;\n  textObj.valign = 'center';\n  textObj.textMargin = conf.wrapPadding;\n  textObj.tspan = false;\n\n  drawText(diagram, textObj);\n\n  const textWidth = textDims.width;\n\n  let line;\n  if (startx === stopx) {\n    if (conf.rightAngles) {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          `M  ${startx},${lineStartY} H ${startx + Math.max(conf.width / 2, textWidth / 2)} V ${\n            lineStartY + 25\n          } H ${startx}`\n        );\n    } else {\n      line = diagram\n        .append('path')\n        .attr(\n          'd',\n          'M ' +\n            startx +\n            ',' +\n            lineStartY +\n            ' C ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY - 10) +\n            ' ' +\n            (startx + 60) +\n            ',' +\n            (lineStartY + 30) +\n            ' ' +\n            startx +\n            ',' +\n            (lineStartY + 20)\n        );\n    }\n  } else {\n    line = diagram.append('line');\n    line.attr('x1', startx);\n    line.attr('y1', lineStartY);\n    line.attr('x2', stopx);\n    line.attr('y2', lineStartY);\n  }\n  // Make an SVG Container\n  // Draw the line\n  if (\n    type === diagObj.db.LINETYPE.DOTTED ||\n    type === diagObj.db.LINETYPE.DOTTED_CROSS ||\n    type === diagObj.db.LINETYPE.DOTTED_POINT ||\n    type === diagObj.db.LINETYPE.DOTTED_OPEN\n  ) {\n    line.style('stroke-dasharray', '3, 3');\n    line.attr('class', 'messageLine1');\n  } else {\n    line.attr('class', 'messageLine0');\n  }\n\n  let url = '';\n  if (conf.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n\n  line.attr('stroke-width', 2);\n  line.attr('stroke', 'none'); // handled by theme/css anyway\n  line.style('fill', 'none'); // remove any fill colour\n  if (type === diagObj.db.LINETYPE.SOLID || type === diagObj.db.LINETYPE.DOTTED) {\n    line.attr('marker-end', 'url(' + url + '#arrowhead)');\n  }\n  if (type === diagObj.db.LINETYPE.SOLID_POINT || type === diagObj.db.LINETYPE.DOTTED_POINT) {\n    line.attr('marker-end', 'url(' + url + '#filled-head)');\n  }\n\n  if (type === diagObj.db.LINETYPE.SOLID_CROSS || type === diagObj.db.LINETYPE.DOTTED_CROSS) {\n    line.attr('marker-end', 'url(' + url + '#crosshead)');\n  }\n\n  // add node number\n  if (sequenceVisible || conf.showSequenceNumbers) {\n    line.attr('marker-start', 'url(' + url + '#sequencenumber)');\n    diagram\n      .append('text')\n      .attr('x', startx)\n      .attr('y', lineStartY + 4)\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '12px')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'sequenceNumber')\n      .text(sequenceIndex);\n  }\n};\n\nexport const drawActors = function (\n  diagram,\n  actors,\n  actorKeys,\n  verticalPos,\n  configuration,\n  messages,\n  isFooter\n) {\n  if (configuration.hideUnusedParticipants === true) {\n    const newActors = new Set();\n    messages.forEach((message) => {\n      newActors.add(message.from);\n      newActors.add(message.to);\n    });\n    actorKeys = actorKeys.filter((actorKey) => newActors.has(actorKey));\n  }\n\n  // Draw the actors\n  let prevWidth = 0;\n  let prevMargin = 0;\n  let maxHeight = 0;\n  let prevBox = undefined;\n\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const box = actor.box;\n\n    // end of box\n    if (prevBox && prevBox != box) {\n      if (!isFooter) {\n        bounds.models.addBox(prevBox);\n      }\n      prevMargin += conf.boxMargin + prevBox.margin;\n    }\n\n    // new box\n    if (box && box != prevBox) {\n      if (!isFooter) {\n        box.x = prevWidth + prevMargin;\n        box.y = verticalPos;\n      }\n      prevMargin += box.margin;\n    }\n\n    // Add some rendering data to the object\n    actor.width = actor.width || conf.width;\n    actor.height = Math.max(actor.height || conf.height, conf.height);\n    actor.margin = actor.margin || conf.actorMargin;\n\n    actor.x = prevWidth + prevMargin;\n    actor.y = bounds.getVerticalPos();\n\n    // Draw the box with the attached line\n    const height = svgDraw.drawActor(diagram, actor, conf, isFooter);\n    maxHeight = Math.max(maxHeight, height);\n    bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n\n    prevWidth += actor.width + prevMargin;\n    if (actor.box) {\n      actor.box.width = prevWidth + box.margin - actor.box.x;\n    }\n    prevMargin = actor.margin;\n    prevBox = actor.box;\n    bounds.models.addActor(actor);\n  }\n\n  // end of box\n  if (prevBox && !isFooter) {\n    bounds.models.addBox(prevBox);\n  }\n\n  // Add a margin between the actor boxes and the first arrow\n  bounds.bumpVerticalPos(maxHeight);\n};\n\nexport const drawActorsPopup = function (diagram, actors, actorKeys, doc) {\n  let maxHeight = 0;\n  let maxWidth = 0;\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const minMenuWidth = getRequiredPopupWidth(actor);\n    const menuDimensions = svgDraw.drawPopup(\n      diagram,\n      actor,\n      minMenuWidth,\n      conf,\n      conf.forceMenus,\n      doc\n    );\n    if (menuDimensions.height > maxHeight) {\n      maxHeight = menuDimensions.height;\n    }\n    if (menuDimensions.width + actor.x > maxWidth) {\n      maxWidth = menuDimensions.width + actor.x;\n    }\n  }\n\n  return { maxHeight: maxHeight, maxWidth: maxWidth };\n};\n\nexport const setConf = function (cnf) {\n  assignWithDepth(conf, cnf);\n\n  if (cnf.fontFamily) {\n    conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n  }\n  if (cnf.fontSize) {\n    conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n  }\n  if (cnf.fontWeight) {\n    conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n  }\n};\n\nconst actorActivations = function (actor) {\n  return bounds.activations.filter(function (activation) {\n    return activation.actor === actor;\n  });\n};\n\nconst activationBounds = function (actor, actors) {\n  // handle multiple stacked activations for same actor\n  const actorObj = actors[actor];\n  const activations = actorActivations(actor);\n\n  const left = activations.reduce(function (acc, activation) {\n    return Math.min(acc, activation.startx);\n  }, actorObj.x + actorObj.width / 2);\n  const right = activations.reduce(function (acc, activation) {\n    return Math.max(acc, activation.stopx);\n  }, actorObj.x + actorObj.width / 2);\n  return [left, right];\n};\n\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n  bounds.bumpVerticalPos(preMargin);\n  let heightAdjust = postMargin;\n  if (msg.id && msg.message && loopWidths[msg.id]) {\n    const loopWidth = loopWidths[msg.id].width;\n    const textConf = messageFont(conf);\n    msg.message = utils.wrapLabel(`[${msg.message}]`, loopWidth - 2 * conf.wrapPadding, textConf);\n    msg.width = loopWidth;\n    msg.wrap = true;\n\n    // const lines = common.splitBreaks(msg.message).length;\n    const textDims = utils.calculateTextDimensions(msg.message, textConf);\n    const totalOffset = Math.max(textDims.height, conf.labelBoxHeight);\n    heightAdjust = postMargin + totalOffset;\n    log.debug(`${totalOffset} - ${msg.message}`);\n  }\n  addLoopFn(msg);\n  bounds.bumpVerticalPos(heightAdjust);\n}\n\n/**\n * Draws a sequenceDiagram in the tag with id: id based on the graph definition in text.\n *\n * @param _text - The text of the diagram\n * @param id - The id of the diagram which will be used as a DOM element id¨\n * @param _version - Mermaid version from package.json\n * @param diagObj - A standard diagram containing the db and the text and type etc of the diagram\n */\nexport const draw = function (_text: string, id: string, _version: string, diagObj: Diagram) {\n  const { securityLevel, sequence } = configApi.getConfig();\n  conf = sequence;\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(_text);\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n  bounds.init();\n  log.debug(diagObj.db);\n\n  const diagram =\n    securityLevel === 'sandbox' ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n\n  // Fetch data from the parsing\n  const actors = diagObj.db.getActors();\n  const boxes = diagObj.db.getBoxes();\n  const actorKeys = diagObj.db.getActorKeys();\n  const messages = diagObj.db.getMessages();\n  const title = diagObj.db.getDiagramTitle();\n  const hasBoxes = diagObj.db.hasAtLeastOneBox();\n  const hasBoxTitles = diagObj.db.hasAtLeastOneBoxWithTitle();\n  const maxMessageWidthPerActor = getMaxMessageWidthPerActor(actors, messages, diagObj);\n  conf.height = calculateActorMargins(actors, maxMessageWidthPerActor, boxes);\n\n  svgDraw.insertComputerIcon(diagram);\n  svgDraw.insertDatabaseIcon(diagram);\n  svgDraw.insertClockIcon(diagram);\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n    if (hasBoxTitles) {\n      bounds.bumpVerticalPos(boxes[0].textMaxHeight);\n    }\n  }\n\n  drawActors(diagram, actors, actorKeys, 0, conf, messages, false);\n  const loopWidths = calculateLoopBounds(messages, actors, maxMessageWidthPerActor, diagObj);\n\n  // The arrow head definition is attached to the svg once\n  svgDraw.insertArrowHead(diagram);\n  svgDraw.insertArrowCrossHead(diagram);\n  svgDraw.insertArrowFilledHead(diagram);\n  svgDraw.insertSequenceNumber(diagram);\n\n  /**\n   * @param msg - The message to draw.\n   * @param verticalPos - The vertical position of the message.\n   */\n  function activeEnd(msg: any, verticalPos: number) {\n    const activationData = bounds.endActivation(msg);\n    if (activationData.starty + 18 > verticalPos) {\n      activationData.starty = verticalPos - 6;\n      verticalPos += 12;\n    }\n    svgDraw.drawActivation(\n      diagram,\n      activationData,\n      verticalPos,\n      conf,\n      actorActivations(msg.from.actor).length\n    );\n\n    bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n  }\n\n  // Draw the messages/signals\n  let sequenceIndex = 1;\n  let sequenceIndexStep = 1;\n  const messagesToDraw = [];\n  messages.forEach(function (msg) {\n    let loopModel, noteModel, msgModel;\n\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.NOTE:\n        noteModel = msg.noteModel;\n        drawNote(diagram, noteModel);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        bounds.newActivation(msg, diagram, actors);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        activeEnd(msg, bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.LOOP_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'loop', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.RECT_START:\n        adjustLoopHeightForWrap(loopWidths, msg, conf.boxMargin, conf.boxMargin, (message) =>\n          bounds.newLoop(undefined, message.message)\n        );\n        break;\n      case diagObj.db.LINETYPE.RECT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawBackgroundRect(diagram, loopModel);\n        bounds.models.addLoop(loopModel);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.OPT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.OPT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'opt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.ALT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'alt', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.PAR_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_AND:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'par', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.AUTONUMBER:\n        sequenceIndex = msg.message.start || sequenceIndex;\n        sequenceIndexStep = msg.message.step || sequenceIndexStep;\n        if (msg.message.visible) {\n          diagObj.db.enableSequenceNumbers();\n        } else {\n          diagObj.db.disableSequenceNumbers();\n        }\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'critical', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.BREAK_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.BREAK_END:\n        loopModel = bounds.endLoop();\n        svgDraw.drawLoop(diagram, loopModel, 'break', conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      default:\n        try {\n          // lastMsg = msg\n          msgModel = msg.msgModel;\n          msgModel.starty = bounds.getVerticalPos();\n          msgModel.sequenceIndex = sequenceIndex;\n          msgModel.sequenceVisible = diagObj.db.showSequenceNumbers();\n          const lineStartY = boundMessage(diagram, msgModel);\n          messagesToDraw.push({ messageModel: msgModel, lineStartY: lineStartY });\n          bounds.models.addMessage(msgModel);\n        } catch (e) {\n          log.error('error while drawing message', e);\n        }\n    }\n\n    // Increment sequence counter if msg.type is a line (and not another event like activation or note, etc)\n    if (\n      [\n        diagObj.db.LINETYPE.SOLID_OPEN,\n        diagObj.db.LINETYPE.DOTTED_OPEN,\n        diagObj.db.LINETYPE.SOLID,\n        diagObj.db.LINETYPE.DOTTED,\n        diagObj.db.LINETYPE.SOLID_CROSS,\n        diagObj.db.LINETYPE.DOTTED_CROSS,\n        diagObj.db.LINETYPE.SOLID_POINT,\n        diagObj.db.LINETYPE.DOTTED_POINT,\n      ].includes(msg.type)\n    ) {\n      sequenceIndex = sequenceIndex + sequenceIndexStep;\n    }\n  });\n\n  messagesToDraw.forEach((e) => drawMessage(diagram, e.messageModel, e.lineStartY, diagObj));\n\n  if (conf.mirrorActors) {\n    // Draw actors below diagram\n    bounds.bumpVerticalPos(conf.boxMargin * 2);\n    drawActors(diagram, actors, actorKeys, bounds.getVerticalPos(), conf, messages, true);\n    bounds.bumpVerticalPos(conf.boxMargin);\n    fixLifeLineHeights(diagram, bounds.getVerticalPos());\n  }\n\n  bounds.models.boxes.forEach(function (box) {\n    box.height = bounds.getVerticalPos() - box.y;\n    bounds.insert(box.x, box.y, box.x + box.width, box.height);\n    box.startx = box.x;\n    box.starty = box.y;\n    box.stopx = box.startx + box.width;\n    box.stopy = box.starty + box.height;\n    box.stroke = 'rgb(0,0,0, 0.5)';\n    svgDraw.drawBox(diagram, box, conf);\n  });\n\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n  }\n\n  // only draw popups for the top row of actors.\n  const requiredBoxSize = drawActorsPopup(diagram, actors, actorKeys, doc);\n\n  const { bounds: box } = bounds.getBounds();\n\n  // Adjust line height of actor lines now that the height of the diagram is known\n  log.debug('For line height fix Querying: #' + id + ' .actor-line');\n  const actorLines = selectAll('#' + id + ' .actor-line');\n  actorLines.attr('y2', box.stopy);\n\n  // Make sure the height of the diagram supports long menus.\n  let boxHeight = box.stopy - box.starty;\n  if (boxHeight < requiredBoxSize.maxHeight) {\n    boxHeight = requiredBoxSize.maxHeight;\n  }\n\n  let height = boxHeight + 2 * conf.diagramMarginY;\n  if (conf.mirrorActors) {\n    height = height - conf.boxMargin + conf.bottomMarginAdj;\n  }\n\n  // Make sure the width of the diagram supports wide menus.\n  let boxWidth = box.stopx - box.startx;\n  if (boxWidth < requiredBoxSize.maxWidth) {\n    boxWidth = requiredBoxSize.maxWidth;\n  }\n  const width = boxWidth + 2 * conf.diagramMarginX;\n\n  if (title) {\n    diagram\n      .append('text')\n      .text(title)\n      .attr('x', (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX)\n      .attr('y', -25);\n  }\n\n  configureSvgSize(diagram, height, width, conf.useMaxWidth);\n\n  const extraVertForTitle = title ? 40 : 0;\n  diagram.attr(\n    'viewBox',\n    box.startx -\n      conf.diagramMarginX +\n      ' -' +\n      (conf.diagramMarginY + extraVertForTitle) +\n      ' ' +\n      width +\n      ' ' +\n      (height + extraVertForTitle)\n  );\n\n  log.debug(`models:`, bounds.models);\n};\n\n/**\n * Retrieves the max message width of each actor, supports signals (messages, loops) and notes.\n *\n * It will enumerate each given message, and will determine its text width, in relation to the actor\n * it originates from, and destined to.\n *\n * @param actors - The actors map\n * @param messages - A list of message objects to iterate\n * @param diagObj - The diagram object.\n * @returns The max message width of each actor.\n */\nfunction getMaxMessageWidthPerActor(\n  actors: { [id: string]: any },\n  messages: any[],\n  diagObj: Diagram\n): { [id: string]: number } {\n  const maxMessageWidthPerActor = {};\n\n  messages.forEach(function (msg) {\n    if (actors[msg.to] && actors[msg.from]) {\n      const actor = actors[msg.to];\n\n      // If this is the first actor, and the message is left of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.LEFTOF && !actor.prevActor) {\n        return;\n      }\n\n      // If this is the last actor, and the message is right of it, no need to calculate the margin\n      if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF && !actor.nextActor) {\n        return;\n      }\n\n      const isNote = msg.placement !== undefined;\n      const isMessage = !isNote;\n\n      const textFont = isNote ? noteFont(conf) : messageFont(conf);\n      const wrappedMessage = msg.wrap\n        ? utils.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont)\n        : msg.message;\n      const messageDimensions = utils.calculateTextDimensions(wrappedMessage, textFont);\n      const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n\n      /*\n       * The following scenarios should be supported:\n       *\n       * - There's a message (non-note) between fromActor and toActor\n       *   - If fromActor is on the right and toActor is on the left, we should\n       *     define the toActor's margin\n       *   - If fromActor is on the left and toActor is on the right, we should\n       *     define the fromActor's margin\n       * - There's a note, in which case fromActor == toActor\n       *   - If the note is to the left of the actor, we should define the previous actor\n       *     margin\n       *   - If the note is on the actor, we should define both the previous and next actor\n       *     margins, each being the half of the note size\n       *   - If the note is on the right of the actor, we should define the current actor\n       *     margin\n       */\n      if (isMessage && msg.from === actor.nextActor) {\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === actor.prevActor) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === msg.to) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth / 2\n        );\n\n        maxMessageWidthPerActor[msg.to] = Math.max(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth / 2\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n        maxMessageWidthPerActor[msg.from] = Math.max(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n        maxMessageWidthPerActor[actor.prevActor] = Math.max(\n          maxMessageWidthPerActor[actor.prevActor] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.OVER) {\n        if (actor.prevActor) {\n          maxMessageWidthPerActor[actor.prevActor] = Math.max(\n            maxMessageWidthPerActor[actor.prevActor] || 0,\n            messageWidth / 2\n          );\n        }\n\n        if (actor.nextActor) {\n          maxMessageWidthPerActor[msg.from] = Math.max(\n            maxMessageWidthPerActor[msg.from] || 0,\n            messageWidth / 2\n          );\n        }\n      }\n    }\n  });\n\n  log.debug('maxMessageWidthPerActor:', maxMessageWidthPerActor);\n  return maxMessageWidthPerActor;\n}\n\nconst getRequiredPopupWidth = function (actor) {\n  let requiredPopupWidth = 0;\n  const textFont = actorFont(conf);\n  for (const key in actor.links) {\n    const labelDimensions = utils.calculateTextDimensions(key, textFont);\n    const labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n    if (requiredPopupWidth < labelWidth) {\n      requiredPopupWidth = labelWidth;\n    }\n  }\n\n  return requiredPopupWidth;\n};\n\n/**\n * This will calculate the optimal margin for each given actor,\n * for a given actor → messageWidth map.\n *\n * An actor's margin is determined by the width of the actor, the width of the largest message that\n * originates from it, and the configured conf.actorMargin.\n *\n * @param actors - The actors map to calculate margins for\n * @param actorToMessageWidth - A map of actor key → max message width it holds\n * @param boxes - The boxes around the actors if any\n */\nfunction calculateActorMargins(\n  actors: { [id: string]: any },\n  actorToMessageWidth: ReturnType<typeof getMaxMessageWidthPerActor>,\n  boxes\n) {\n  let maxHeight = 0;\n  Object.keys(actors).forEach((prop) => {\n    const actor = actors[prop];\n    if (actor.wrap) {\n      actor.description = utils.wrapLabel(\n        actor.description,\n        conf.width - 2 * conf.wrapPadding,\n        actorFont(conf)\n      );\n    }\n    const actDims = utils.calculateTextDimensions(actor.description, actorFont(conf));\n    actor.width = actor.wrap\n      ? conf.width\n      : Math.max(conf.width, actDims.width + 2 * conf.wrapPadding);\n\n    actor.height = actor.wrap ? Math.max(actDims.height, conf.height) : conf.height;\n    maxHeight = Math.max(maxHeight, actor.height);\n  });\n\n  for (const actorKey in actorToMessageWidth) {\n    const actor = actors[actorKey];\n\n    if (!actor) {\n      continue;\n    }\n\n    const nextActor = actors[actor.nextActor];\n\n    // No need to space out an actor that doesn't have a next link\n    if (!nextActor) {\n      const messageWidth = actorToMessageWidth[actorKey];\n      const actorWidth = messageWidth + conf.actorMargin - actor.width / 2;\n      actor.margin = Math.max(actorWidth, conf.actorMargin);\n      continue;\n    }\n\n    const messageWidth = actorToMessageWidth[actorKey];\n    const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n\n    actor.margin = Math.max(actorWidth, conf.actorMargin);\n  }\n\n  let maxBoxHeight = 0;\n  boxes.forEach((box) => {\n    const textFont = messageFont(conf);\n    let totalWidth = box.actorKeys.reduce((total, aKey) => {\n      return (total += actors[aKey].width + (actors[aKey].margin || 0));\n    }, 0);\n\n    totalWidth -= 2 * conf.boxTextMargin;\n    if (box.wrap) {\n      box.name = utils.wrapLabel(box.name, totalWidth - 2 * conf.wrapPadding, textFont);\n    }\n\n    const boxMsgDimensions = utils.calculateTextDimensions(box.name, textFont);\n    maxBoxHeight = Math.max(boxMsgDimensions.height, maxBoxHeight);\n    const minWidth = Math.max(totalWidth, boxMsgDimensions.width + 2 * conf.wrapPadding);\n    box.margin = conf.boxTextMargin;\n    if (totalWidth < minWidth) {\n      const missing = (minWidth - totalWidth) / 2;\n      box.margin += missing;\n    }\n  });\n  boxes.forEach((box) => (box.textMaxHeight = maxBoxHeight));\n\n  return Math.max(maxHeight, conf.height);\n}\n\nconst buildNoteModel = function (msg, actors, diagObj) {\n  const startx = actors[msg.from].x;\n  const stopx = actors[msg.to].x;\n  const shouldWrap = msg.wrap && msg.message;\n\n  let textDimensions = utils.calculateTextDimensions(\n    shouldWrap ? utils.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message,\n    noteFont(conf)\n  );\n  const noteModel = {\n    width: shouldWrap\n      ? conf.width\n      : Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin),\n    height: 0,\n    startx: actors[msg.from].x,\n    stopx: 0,\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n  };\n  if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx + (actors[msg.from].width + conf.actorMargin) / 2;\n  } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, textDimensions.width + 2 * conf.noteMargin)\n      : Math.max(\n          actors[msg.from].width / 2 + actors[msg.to].width / 2,\n          textDimensions.width + 2 * conf.noteMargin\n        );\n    noteModel.startx = startx - noteModel.width + (actors[msg.from].width - conf.actorMargin) / 2;\n  } else if (msg.to === msg.from) {\n    textDimensions = utils.calculateTextDimensions(\n      shouldWrap\n        ? utils.wrapLabel(msg.message, Math.max(conf.width, actors[msg.from].width), noteFont(conf))\n        : msg.message,\n      noteFont(conf)\n    );\n    noteModel.width = shouldWrap\n      ? Math.max(conf.width, actors[msg.from].width)\n      : Math.max(actors[msg.from].width, conf.width, textDimensions.width + 2 * conf.noteMargin);\n    noteModel.startx = startx + (actors[msg.from].width - noteModel.width) / 2;\n  } else {\n    noteModel.width =\n      Math.abs(startx + actors[msg.from].width / 2 - (stopx + actors[msg.to].width / 2)) +\n      conf.actorMargin;\n    noteModel.startx =\n      startx < stopx\n        ? startx + actors[msg.from].width / 2 - conf.actorMargin / 2\n        : stopx + actors[msg.to].width / 2 - conf.actorMargin / 2;\n  }\n  if (shouldWrap) {\n    noteModel.message = utils.wrapLabel(\n      msg.message,\n      noteModel.width - 2 * conf.wrapPadding,\n      noteFont(conf)\n    );\n  }\n  log.debug(\n    `NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.message}]`\n  );\n  return noteModel;\n};\n\nconst buildMessageModel = function (msg, actors, diagObj) {\n  let process = false;\n  if (\n    [\n      diagObj.db.LINETYPE.SOLID_OPEN,\n      diagObj.db.LINETYPE.DOTTED_OPEN,\n      diagObj.db.LINETYPE.SOLID,\n      diagObj.db.LINETYPE.DOTTED,\n      diagObj.db.LINETYPE.SOLID_CROSS,\n      diagObj.db.LINETYPE.DOTTED_CROSS,\n      diagObj.db.LINETYPE.SOLID_POINT,\n      diagObj.db.LINETYPE.DOTTED_POINT,\n    ].includes(msg.type)\n  ) {\n    process = true;\n  }\n  if (!process) {\n    return {};\n  }\n  const fromBounds = activationBounds(msg.from, actors);\n  const toBounds = activationBounds(msg.to, actors);\n  const fromIdx = fromBounds[0] <= toBounds[0] ? 1 : 0;\n  const toIdx = fromBounds[0] < toBounds[0] ? 0 : 1;\n  const allBounds = [...fromBounds, ...toBounds];\n  const boundedWidth = Math.abs(toBounds[toIdx] - fromBounds[fromIdx]);\n  if (msg.wrap && msg.message) {\n    msg.message = utils.wrapLabel(\n      msg.message,\n      Math.max(boundedWidth + 2 * conf.wrapPadding, conf.width),\n      messageFont(conf)\n    );\n  }\n  const msgDims = utils.calculateTextDimensions(msg.message, messageFont(conf));\n\n  return {\n    width: Math.max(\n      msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding,\n      boundedWidth + 2 * conf.wrapPadding,\n      conf.width\n    ),\n    height: 0,\n    startx: fromBounds[fromIdx],\n    stopx: toBounds[toIdx],\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n    type: msg.type,\n    wrap: msg.wrap,\n    fromBounds: Math.min.apply(null, allBounds),\n    toBounds: Math.max.apply(null, allBounds),\n  };\n};\n\nconst calculateLoopBounds = function (messages, actors, _maxWidthPerActor, diagObj) {\n  const loops = {};\n  const stack = [];\n  let current, noteModel, msgModel;\n\n  messages.forEach(function (msg) {\n    msg.id = utils.random({ length: 10 });\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.LOOP_START:\n      case diagObj.db.LINETYPE.ALT_START:\n      case diagObj.db.LINETYPE.OPT_START:\n      case diagObj.db.LINETYPE.PAR_START:\n      case diagObj.db.LINETYPE.CRITICAL_START:\n      case diagObj.db.LINETYPE.BREAK_START:\n        stack.push({\n          id: msg.id,\n          msg: msg.message,\n          from: Number.MAX_SAFE_INTEGER,\n          to: Number.MIN_SAFE_INTEGER,\n          width: 0,\n        });\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n      case diagObj.db.LINETYPE.PAR_AND:\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        if (msg.message) {\n          current = stack.pop();\n          loops[current.id] = current;\n          loops[msg.id] = current;\n          stack.push(current);\n        }\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n      case diagObj.db.LINETYPE.ALT_END:\n      case diagObj.db.LINETYPE.OPT_END:\n      case diagObj.db.LINETYPE.PAR_END:\n      case diagObj.db.LINETYPE.CRITICAL_END:\n      case diagObj.db.LINETYPE.BREAK_END:\n        current = stack.pop();\n        loops[current.id] = current;\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        {\n          const actorRect = actors[msg.from ? msg.from.actor : msg.to.actor];\n          const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n          const x =\n            actorRect.x + actorRect.width / 2 + ((stackedSize - 1) * conf.activationWidth) / 2;\n          const toAdd = {\n            startx: x,\n            stopx: x + conf.activationWidth,\n            actor: msg.from.actor,\n            enabled: true,\n          };\n          bounds.activations.push(toAdd);\n        }\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        {\n          const lastActorActivationIdx = bounds.activations\n            .map((a) => a.actor)\n            .lastIndexOf(msg.from.actor);\n          delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n        }\n        break;\n    }\n    const isNote = msg.placement !== undefined;\n    if (isNote) {\n      noteModel = buildNoteModel(msg, actors, diagObj);\n      msg.noteModel = noteModel;\n      stack.forEach((stk) => {\n        current = stk;\n        current.from = Math.min(current.from, noteModel.startx);\n        current.to = Math.max(current.to, noteModel.startx + noteModel.width);\n        current.width =\n          Math.max(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n      });\n    } else {\n      msgModel = buildMessageModel(msg, actors, diagObj);\n      msg.msgModel = msgModel;\n      if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n        stack.forEach((stk) => {\n          current = stk;\n          if (msgModel.startx === msgModel.stopx) {\n            const from = actors[msg.from];\n            const to = actors[msg.to];\n            current.from = Math.min(\n              from.x - msgModel.width / 2,\n              from.x - from.width / 2,\n              current.from\n            );\n            current.to = Math.max(to.x + msgModel.width / 2, to.x + from.width / 2, current.to);\n            current.width =\n              Math.max(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n          } else {\n            current.from = Math.min(msgModel.startx, current.from);\n            current.to = Math.max(msgModel.stopx, current.to);\n            current.width = Math.max(current.width, msgModel.width) - conf.labelBoxWidth;\n          }\n        });\n      }\n    }\n  });\n  bounds.activations = [];\n  log.debug('Loop type widths:', loops);\n  return loops;\n};\n\nexport default {\n  bounds,\n  drawActors,\n  drawActorsPopup,\n  setConf,\n  draw,\n};\n", "import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/sequenceDiagram';\nimport db from './sequenceDb';\nimport styles from './styles';\nimport renderer from './sequenceRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],
  "mappings": "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,GAAE,EAAC,GAAE,CAAC,CAAC,EAAC,GAAE,EAAC,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,GAAE,EAAC,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,GAAE,EAAC,GAAE,IAAG,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,IAAG,GAAE,EAAE,CAAC,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE,GAAE,KAAI,EAAC,GAAE,GAAE,CAAC,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,IAAG,GAAE,EAAE,CAAC,IAAG,EAAE,GAAE,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAC,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAC,IAAG,IAAG,IAAG,IAAG,GAAE,EAAE,CAAC,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE,GAAE,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,IAAG,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,CAAC,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,GAAE,EAAC,IAAG,GAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,IAAG,KAAI,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,IAAG,KAAI,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,IAAG,KAAI,GAAE,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,IAAG,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,GAAE,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,GAAE,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,GAAE,GAAE,CAAC,GAAE,GAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,KAAI,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,GAAE,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,IAAG,CAAC,GAAE,GAAG,EAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,GAAG,EAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,KAAI,IAAG,IAAG,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,KAAI,IAAG,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,KAAI,IAAG,IAAG,CAAC,GAAE,EAAE,KAAI,KAAI,EAAC,GAAE,KAAI,IAAG,IAAG,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAE,KAAI,CAAC,GAAE,EAAE,CAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,GAAE,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,GAAE,EAAC,IAAG,CAAC,GAAE,EAAE,EAAC,CAAC;IACpgK,gBAAgB,EAAC,GAAE,CAAC,GAAE,EAAE,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,IAAG,CAAC,GAAE,CAAC,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,IAAG,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,KAAI,CAAC,GAAE,EAAE,GAAE,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",
  "names": ["o", "parser", "lexer", "configApi.getConfig", "clear", "commonClear", "actors", "text", "actorCnt", "diagram", "bounds", "conf", "actorActivations", "messages", "boxes", "box", "messageWidth", "actorWidth"]
}
